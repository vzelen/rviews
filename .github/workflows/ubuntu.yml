name: Ubuntu

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: .local

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"

    steps:
    - uses: actions/checkout@v2
      
    - name: cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: install GoogleTest
      if: ${{ steps.cache.output.cache-hit != 'true' }}
      run: |
        cd ..
        git clone https://github.com/google/googletest.git --branch release-1.10.0
        cd googletest
        cmake -Bbuild -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION
        cmake --build build --config Release
        cmake --build build --target install --config Release

    - name: build and run tests
      run: |
        rm -rf build/
        mkdir build
        cd build && cmake .. -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION -Drviews_ENABLE_UNIT_TESTING=1 -Drviews_ENABLE_CODE_COVERAGE=1
        cd ../ && cmake --build build --config Release
        cd build/test && ctest -C Release -VV

    - name: generate code coverage report
      run: |
        mkdir coverage
        find . -type f -name '*.gcno' -exec gcov -pb {} +
        mv *.gcov coverage

    - name: upload code coverage
      run: |
        cd coverage
        bash <(curl -s https://codecov.io/bash)